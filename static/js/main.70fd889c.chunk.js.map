{"version":3,"sources":["Header/styled.js","Header/index.js","Container/styled.js","Container/index.js","currencies.js","Container/Form/Clock/styled.js","Container/Form/Clock/index.js","Container/Form/Clock/useCurrentDate.js","Container/Form/styled.js","Container/Form/index.js","Container/Paragraph/styled.js","Container/Paragraph/index.js","Container/Result/styled.js","Container/Result/index.js","Footer/styled.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","header","Title","h1","Header","title","Main","main","Container","children","currencies","short","name","rate","ClockWrapper","div","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","newDate","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","day","month","hour","minute","second","formatDate","Fieldset","fieldset","Legend","legend","LabelText","label","Input","input","Select","select","Button","button","Form","calculateResult","currency","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","map","key","StyledParagraph","p","Paragraph","rel","href","TextBox","ResultText","span","SourceAmount","TargetAmount","Result","result","sourceAmount","toFixed","targetAmount","StyledFooter","footer","Footer","App","setResult","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70fd889c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    display: block;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    font-weight: 400;\r\n    letter-spacing: 1px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader, Title } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        <Title>{title}</Title>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n    margin: 20px auto;\r\n    padding: 0 20px;\r\n    width: 100%;\r\n    max-width: 600px;\r\n`;","import React from \"react\";\r\nimport { Main } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <>\r\n        <Main>{children}</Main>\r\n    </>\r\n);\r\n\r\nexport default Container;","export const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.4660,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt brytyjski\",\r\n        rate: 4.8851,\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.9806,\r\n    },\r\n    {\r\n        short: \"CHF\",\r\n        name: \"Frank szwajcarski\",\r\n        rate: 4.1818,\r\n    },\r\n];","import styled from \"styled-components\";\r\n\r\nexport const ClockWrapper = styled.div`\r\n    font-family: monospace;\r\n    padding-right: 20px;\r\n    text-align: right;\r\n    font-size: 14px;\r\n`;","import React from 'react';\r\nimport { ClockWrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n});\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockWrapper>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </ClockWrapper>\r\n    )\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            const newDate = new Date();\r\n            setDate(newDate);\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, []);\r\n\r\n    return date;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    padding: 20px;\r\n    border: 1px solid #222222;\r\n    border-radius: 4px;\r\n    box-shadow: 1px 1px #222222;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    background-color: hsl(120, 100%, 90%);\r\n    padding: 10px;\r\n    border: 1px solid #222222;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const LabelText = styled.label`\r\n    width: 100%;\r\n    max-width: 150px;\r\n    display: inline-block;\r\n    margin-right: 5px;\r\n    text-align: left;\r\n    font-size: 16px;\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    padding: 10px;\r\n    border: 1px solid #222222;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n\r\n    &:required {\r\n        background-color: hsl(0, 100%, 95%);\r\n    }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    padding: 10px;\r\n    border: 1px solid #222222;\r\n    border-radius: 4px;\r\n    font-size: 16px;\r\n    letter-spacing: 1px;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    margin: 10px auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 10px;\r\n    border: 1px solid;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n    font-size: 18px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n\r\n    &:hover {\r\n        background-color: hsl(120, 100%, 90%);\r\n    }\r\n\r\n    &:active {\r\n        background-color: hsl(120, 100%, 80%);\r\n    }\r\n`;","import React, { useState } from \"react\";\r\nimport { currencies } from \"../../currencies\";\r\nimport Clock from './Clock';\r\nimport { Fieldset, Legend, LabelText, Input, Select, Button } from \"./styled\";\r\n\r\nconst Form = ({ calculateResult }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <Fieldset>\r\n                <Legend>Uzupełnij dane</Legend>\r\n                <Clock />\r\n                <p>\r\n                    <label>\r\n                        <LabelText>\r\n                            Kwota w zł*:\r\n                        </LabelText>\r\n                        <Input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            placeholder=\"Podaj kwotę w zł\"\r\n                            type=\"number\"\r\n                            required\r\n                            step=\"0.01\"\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <LabelText>\r\n                            Waluta:\r\n                        </LabelText>\r\n                        <Select\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </Select>\r\n                    </label>\r\n                </p>\r\n                <Button>Przelicz</Button>\r\n            </Fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const StyledParagraph = styled.p`\r\n    text-align: center;\r\n    padding: 0 20px;\r\n`;","import React from \"react\";\r\nimport { StyledParagraph } from \"./styled\";\r\n\r\nconst Paragraph = () => (\r\n    <StyledParagraph>Kursy walut na podstawie tabeli nr 125/A/NBP/2020 of 2020-06-30 – <a\r\n        rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://nbp.pl/\"\r\n        title=\"Strona internetowa NBP\">NBP</a>\r\n    </StyledParagraph>\r\n);\r\n\r\nexport default Paragraph;","import styled from \"styled-components\";\r\n\r\nexport const TextBox = styled.div`\r\n    padding: 10px;\r\n    background-color: #fff;\r\n    border: 1px solid #222222;\r\n    border-radius: 4px;\r\n    box-shadow: 1px 1px #222222;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ResultText = styled.span`\r\n    display: block;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n`;\r\n\r\nexport const SourceAmount = styled.span`\r\n    color: hsl(120, 100%, 25%);\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n    letter-spacing: 1px;\r\n`;\r\n\r\nexport const TargetAmount = styled.span`\r\n    color: green;\r\n    font-weight: 800;\r\n    font-size: 24px;\r\n    letter-spacing: 1px;\r\n`;","import React from \"react\";\r\nimport { TextBox, ResultText, SourceAmount, TargetAmount } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <TextBox>\r\n        <ResultText>\r\n            {result !== undefined && (\r\n                <>\r\n                    <SourceAmount>\r\n                        {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;\r\n                    </SourceAmount>\r\n                    to w przeliczeniu&nbsp;\r\n                    <TargetAmount>\r\n                        {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                    </TargetAmount>\r\n                </>\r\n            )}\r\n        </ResultText>\r\n    </TextBox>\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    padding: 20px;\r\n    text-align: center;\r\n`;","import React from \"react\";\r\nimport { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = () => (\r\n    <StyledFooter>\r\n        © 2020 Kacper Szemraj\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Form from \"./Container/Form\";\nimport Paragraph from \"./Container/Paragraph\";\nimport Result from \"./Container/Result\";\nimport Footer from \"./Footer\";\nimport { currencies } from './currencies';\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const calculateResult = (currency, amount) => {\n    const rate = currencies\n      .find(({ short }) => short === currency)\n      .rate;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  }\n\n  return (\n    <>\n      <Header title=\"Kalkulator Walutowy\" />\n      <Container>\n        <Form\n          calculateResult={calculateResult}\n        />\n        <Paragraph />\n        <Result\n          result={result}\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}