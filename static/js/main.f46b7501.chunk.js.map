{"version":3,"sources":["Header/index.js","Container/index.js","currencies.js","Container/Form/index.js","Container/Paragraph/index.js","Container/Result/index.js","Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","className","Container","children","currencies","short","name","rate","Form","calculateResult","useState","currency","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","map","key","Paragraph","rel","href","Result","result","undefined","sourceAmount","toFixed","targetAmount","Footer","App","setResult","find","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wWASeA,G,MANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,4BAAQC,UAAU,UACd,wBAAIA,UAAU,iBAAiBD,MCIxBE,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,oCACI,0BAAMF,UAAU,aAAaE,MCLxBC,EAAa,CACtB,CACIC,MAAO,MACPC,KAAM,OACNC,KAAM,OAEV,CACIF,MAAO,MACPC,KAAM,iBACNC,KAAM,QAEV,CACIF,MAAO,MACPC,KAAM,yBACNC,KAAM,QAEV,CACIF,MAAO,MACPC,KAAM,oBACNC,KAAM,SCyCCC,G,MAxDF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EACFC,mBAASN,EAAW,GAAGC,OADrB,mBAC3BM,EAD2B,KACjBC,EADiB,OAENF,mBAAS,IAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KASlC,OACI,0BAAMC,SANO,SAACC,GACdA,EAAMC,iBACNR,EAAgBE,EAAUE,KAKtB,8BAAUZ,UAAU,kBAChB,4BAAQA,UAAU,gBAAlB,uBACA,2BACI,+BACI,0BAAMA,UAAU,mBAAhB,qBAGA,2BACIiB,MAAOL,EACPM,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAUM,EAAOF,QAC3CG,YAAY,6BACZpB,UAAU,cACVqB,KAAK,SACLC,UAAQ,EACRC,KAAK,WAIjB,2BACI,+BACI,0BAAMvB,UAAU,mBAAhB,WAGA,4BACIA,UAAU,cACViB,MAAOP,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,SAE5Cd,EAAWqB,KAAK,SAAAd,GAAQ,OACrB,4BACIe,IAAKf,EAASN,MACda,MAAOP,EAASN,OAEfM,EAASL,YAM9B,4BAAQL,UAAU,gBAAlB,gBC5CD0B,G,MAPG,kBACd,uBAAG1B,UAAU,aAAb,0EAA2F,uBACvF2B,IAAI,sBAAsBR,OAAO,SAASS,KAAK,kBAC/C7B,MAAM,0BAFiF,UCiBhF8B,G,MAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,yBAAK9B,UAAU,mBACX,0BAAMA,UAAU,qBACA+B,IAAXD,GACG,oCACI,0BAAM9B,UAAU,wBACX8B,EAAOE,aAAaC,QAAQ,GADjC,eADJ,wBAKI,0BAAMjC,UAAU,wBACX8B,EAAOI,aAAaD,QAAQ,GADjC,OAC2CH,EAAOpB,eCJvDyB,G,MANA,kBACX,4BAAQnC,UAAU,UAAlB,8BCsCWoC,MAjCf,WAAgB,IAAD,EAEe3B,qBAFf,mBAENqB,EAFM,KAEEO,EAFF,KAgBb,OACE,oCACE,kBAAC,EAAD,CAAQtC,MAAM,wBACd,kBAAC,EAAD,KACE,kBAAC,EAAD,CACES,gBAjBgB,SAACE,EAAUE,GACjC,IAAMN,EAAOH,EACVmC,MAAK,qBAAGlC,QAAsBM,KAC9BJ,KAEH+B,EAAU,CACRL,cAAepB,EACfsB,aAActB,EAASN,EACvBI,gBAWE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEoB,OAAQA,KAGZ,kBAAC,EAAD,QCzBcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f46b7501.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = ({ title }) => (\r\n    <header className=\"header\">\r\n        <h1 className=\"header__title\">{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <>\r\n        <main className=\"container\">{children}</main>\r\n    </>\r\n);\r\n\r\nexport default Container;","export const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.4660,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt brytyjski\",\r\n        rate: 4.8851,\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.9806,\r\n    },\r\n    {\r\n        short: \"CHF\",\r\n        name: \"Frank szwajcarski\",\r\n        rate: 4.1818,\r\n    },\r\n];","import React, { useState } from \"react\";\r\nimport { currencies } from \"../../currencies\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ calculateResult }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Uzupełnij dane</legend>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Kwota w zł*:\r\n                        </span>\r\n                        <input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            placeholder=\"Podaj kwotę w zł\"\r\n                            className=\"form__field\"\r\n                            type=\"number\"\r\n                            required\r\n                            step=\"0.01\"\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Waluta:\r\n                        </span>\r\n                        <select\r\n                            className=\"form__field\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <button className=\"form__button\">Przelicz</button>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Paragraph = () => (\r\n    <p className=\"paragraph\">Kursy walut na podstawie tabeli nr 125/A/NBP/2020 of 2020-06-30 – <a\r\n        rel=\"noreferrer noopener\" target=\"_blank\" href=\"https://nbp.pl/\"\r\n        title=\"Strona internetowa NBP\">NBP</a>\r\n    </p>\r\n);\r\n\r\nexport default Paragraph;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Result = ({ result }) => (\r\n    <div className=\"result__textBox\">\r\n        <span className=\"result__text\">\r\n            {result !== undefined && (\r\n                <>\r\n                    <span className=\"result__sourceAmount\">\r\n                        {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;\r\n                    </span>\r\n                    to w przeliczeniu&nbsp;\r\n                    <span className=\"result__targetAmount\">\r\n                        {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                    </span>\r\n                </>\r\n            )}\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default Result;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        © 2020 Kacper Szemraj\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport Form from \"./Container/Form\";\nimport Paragraph from \"./Container/Paragraph\";\nimport Result from \"./Container/Result\";\nimport Footer from \"./Footer\";\nimport { currencies } from './currencies';\n\nfunction App() {\n\n  const [result, setResult] = useState();\n\n  const calculateResult = (currency, amount) => {\n    const rate = currencies\n      .find(({ short }) => short === currency)\n      .rate;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  }\n\n  return (\n    <>\n      <Header title=\"Kalkulator Walutowy\" />\n      <Container>\n        <Form\n          calculateResult={calculateResult}\n        />\n        <Paragraph />\n        <Result\n          result={result}\n        />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}